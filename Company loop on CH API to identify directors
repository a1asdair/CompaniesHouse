
import chwrapper

import json

import csv

from time import sleep

from urllib.error import HTTPError

###############################################

def getlistofdirectors(companynumber):

        # Ok, things have got a bit confused here. The function suggests that it will return a list of directors. 
        # However here you are declaring global variables (ie ones that will apply outside of the function)
        # Then below an individual director's details are stored in these variables (and not a list)
        # And then finally these variables are returned by the function, but only for one director (the final one)
        # So there are a few issues. You need functionlaity to manage multiple pages of results (which I have started to add in below)
        # and you also need to decide whether this functions job is to give you one director, or a list of all directors
        # If you look at my original script:
        # https://github.com/a1asdair/companieshouseapi/blob/master/lookuptrustees-oscrch.py
        # You will see that it implements (crude) page tracking for multiple pages of results, and avoids
        # the issue above by writing each directors details to a file as it finds them (rather than returning the details out of a function).
        
        global name, role, appointon, resignedon, dob, country, nationality, occupation

        searchnumber = companynumber[1:]

        print(searchnumber) 
        
        numItems = 1    # This is to track how many directors there are. We set it to 1 as we don't know yet how many there will be
        pIndex = 0      # This tracks the number of directors that we have downloaded. We start it at 0.
        
        while pIndex < numItems:        # This while loop keeps us downloading until we have got all the company directors
            # Make the Companies House request  
                try:    

                    response = search_client.officers(searchnumber, start_index=pIndex) # We use start_index in the request to say where in the results we should start
                    numItems = response.json()['total_results']         # This is where we find out the total number of directors in the search
                    pIndex += 35                                        # 35 is the page size i.e. the number of directiors returned in a single request - or at least it was when I wrote my orginal code. Worth checking.
                    directorslist = response.json()["items"]

                    for person in directorslist:

                        try:
                            name = person["name"]

                        except: 

                            name = "."

                        try: 

                            role = person["officer_role"]

                        except: 

                            role = "."

                        try: 

                            appointon = person["appointed_on"]

                        except: 

                            appoint_on = "."

                        try: 

                            resignedon = person["resigned_on"]

                        except: 

                            resignedon = "."

                        try: 

                            dob = person["date_of_birth"]

                        except: 

                            dob = "."

                        try: 

                            country = person["country_of_residence"]

                        except: 

                            country = "."

                        try: 

                            nationality = person["nationality"]

                        except: 

                            nationality = "." 

                        try: 

                            occupation = person["occupation"]

                        except: 

                            occupation = "."

                except:
                    print("error")

                    name, role, appointon, resignedon, dob, country, nationality, occupation = "" , "", "", "", "", "", "", ""  

        #        else:
         #           sleep(30)

          #          print (".", end='')

           #         name, role, appointon, resignedon, dob, country, nationality, occupation = getlistofdirectors(companynumber)    

            #        print("")

        return name, role, appointon, resignedon, dob, country, nationality, occupation 

# Companies House token 

tokenPath = ""C:/Users/clair/Documents/PhD/Data/ - CompaniesHouseAPI/chapitoken.txt"
tokenFile = open(tokenPath, "r")
chapiToken = tokenFile.read()
print(chapiToken)

# Read in list of company numbers of matched charities in CSV format     
        
projectpath = "C:/Users/clair/Documents/PhD/Data/CompaniesHouseAPI/"  
 
inputfilepath = projectpath + "companynumbers.csv" 
 
csvfile = open(inputfilepath, encoding="utf8")
 
#fieldnames = ("companynumber")

reader = csv.DictReader( csvfile)

# Open an output file 

outputfilepath = projectpath + "companydirectors.csv"

print("Ready to go...")

with open(outputfilepath, 'w', newline='') as outputcsvfile:

    outputfieldnames = ("companynumber", "name", "role", "appointon", "resignedon", "dob", "country", "nationality", "occupation")

    writerOutput = csv.DictWriter( outputcsvfile, outputfieldnames)
 
    writerOutput.writeheader()

    # Work through each company in the input file 

    for row in reader:
 
        companynumber = row['companynumber']

        # Search Companies House by company number

        name, role, appointon, resignedon, dob, country, nationality, occupation = getlistofdirectors(companynumber)

        # Output the results into a CSV file 

        print("DIRECTOR: ", companynumber, '|', role, '|', name)
        
        writerOutput.writerow({'companynumber': companynumber, 'name' : name, 'role' : role, 'appointon' : appointon, 'resignedon' : resignedon, 'dob' : dob, 'country' : country, 'nationality' : nationality, 'occupation' : occupation})
 
print("Finished! There is a list of company directors by matched charity waiting for you.")


  
